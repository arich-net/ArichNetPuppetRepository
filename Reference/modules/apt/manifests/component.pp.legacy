# Define: apt::source::component
#
# This module manages apt sources.list.d/<source>/components
#
# Operating systems:
#	:Working
#		Ubuntu 8.04/10.04
#		Debian 4/5
# 	:Testing
#
# Parameters:
#	$name = an array of "components" used in augeas resource
#	$ensure = defaults to present as its being called from within a case statement
#	$sourcename = required to satisfiy augeas match condition
#	$uri = required to satisfiy augeas match condition
#
# Actions:
#	1) We currently have no way to define the order at which augeas runs the array, i.e item1 could be 
#		executed after item 2, this isn't a problem with apt-get at the moment.
#	2) Remove entried not managed with puppet? augeas match not_include or != $name
#
# Requires:
#	This is called from within apt/source.pp
#
# Sample Usage:
#	apt::source::component { $component:
#				sourcename => $name,
#				uri => $uri,
#			}
#
# [Remember: No empty lines between comments and class definition]
define apt::component($ensure='present', $sourcename, $uri) {
	#$name will be an array containing $component passed from define: apt::source

case $ensure {
	present: {
		augeas {"apt-source-$sourcename add-component-$name" :
			context => "/files/etc/apt/sources.list.d",
			changes => "set *[label() = '$sourcename.list']/*[uri = '$uri']/component[last()+1] '$name'",
			onlyif => "match *[label() = '$sourcename.list']/*[uri = '$uri']/component[.= '$name'] size == 0",
			notify => Exec["apt-get_update"],
			require => Augeas["apt-source-add-$sourcename"],
		}
	} #end present	
} #end case
} #end define:apt::source::component