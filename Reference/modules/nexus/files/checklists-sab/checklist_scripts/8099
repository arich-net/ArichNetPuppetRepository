#!/usr/bin/perl
use strict;
use warnings;
use Net::SSH::Expect;
use Getopt::Long;

unless (@ARGV>0)
{
  print  "$0 passFor_nttuser passFor_custuser pass hostIp \r\n";
  exit 0;
}

#Hide Command line from ps
$0 = 'remote ls  is running';
my ($host_ip, $nttuser_passwd, $custuser_passwd, $root_pw, $output, $status ,$inr) = '';
GetOptions('hostIp=s' => \$host_ip,'pass=s'=>\$root_pw, 'passFor_custuser=s' => \$custuser_passwd, 'passFor_nttuser=s' => \$nttuser_passwd,
           'pass=s'=>\$inr
          );

#Strip Netmask if passed
$host_ip=~s/\/(.*?)$//g;

# Create new connection to host using user root
my $ssh = Net::SSH::Expect->new (
    host => $host_ip, 
    password=>$nttuser_passwd, 
    user => 'nttuser', 
    raw_pty => 1
);

warn "Is Stderr is being trapped okay?\r\n";
# Call login
my $login_output;
##login will die with status code 0 - so trap
eval
{
   $login_output = $ssh->login();
};

# If login output doesn't contain the word welcome
if ($@ || $login_output !~ /Running as unpriviledged user/) {
    # Send a status code of 1(fail) with a copy of the login output(will show in Nexus)
    print "2;;";
    print $@ if $@;
    print $login_output if $login_output;
    exit 2;
}

print "Logged In Okay With ".$login_output."\r\n";

print "---------------------\r\n";

print "Waiting for 20 seconds , for full output\r\n";

my $wait_prompt = $ssh->read_all(20);

print "Got $wait_prompt \r\n";

if ($wait_prompt !~ /.*]\$/)
{
   print "2;;No Login Prompt - giving up\r\n";
   exit 2;
}


print "Doing LS test \r\n";
#ls test -
my $ls_test = $ssh->exec("/bin/ls -la");

if ($@)
{
    print "2;;$@";
    exit 2;
}
if (!$ls_test)
{
    print "1;;Nothing Returned from ls test ";
    exit 1 ;
}

# If the number of lines in Home dir is not enough
if (($ls_test =~ tr/\n//) < 3) {
    # Send out a fail
    print "1;;".$ls_test;
    exit 1 ;
}

# OK, if we've got this far without exiting, then it's a success(status code 1) - better end the ssh session too
print $ls_test."\r\n";
print "0;;Okay 01";
$ssh->close();

exit 0;
