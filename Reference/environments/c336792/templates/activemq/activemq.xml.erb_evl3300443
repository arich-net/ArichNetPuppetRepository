<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>
    </bean>


    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="<%= hostname %>" useJmx="true">
 
        <destinationPolicy>
          <policyMap>
            <policyEntries>
              <policyEntry queue="*.reply.>" gcInactiveDestinations="true" inactiveTimoutBeforeGC="300000" />
              <policyEntry queue="registration.>" gcInactiveDestinations="true" inactiveTimoutBeforeGC="300000" />
              <policyEntry topic=">" producerFlowControl="false"/>
            </policyEntries>
          </policyMap>
        </destinationPolicy>


        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>
                
        <plugins>
          <statisticsBrokerPlugin/>

          <simpleAuthenticationPlugin>
            <users>
              <authenticationUser username="admin" password="secret" groups="admins,mcollective,everyone"/>
              <authenticationUser username="mcollective" password="marionette" groups="mcollective,everyone"/>
            </users>
          </simpleAuthenticationPlugin>


          <authorizationPlugin>
            <map>
              <authorizationMap>
                <authorizationEntries>
                  

                  <authorizationEntry topic="mcollective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="mcollective.>" write="admins" read="admins" admin="admins" />

                  <authorizationEntry queue="mcollective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="mcollective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mcollective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mcollective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mcollective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="default_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="default_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="default_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="default_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="default_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="default_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="londen01_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="londen01_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="londen01_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen01_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen01_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen01_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="londen02_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="londen02_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="londen02_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen02_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen02_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="londen02_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="frnkge05_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="frnkge05_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="frnkge05_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="frnkge05_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="frnkge05_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="frnkge05_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="parsfr02_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="parsfr02_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="parsfr02_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr02.collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr02_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr02_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="parsfr03_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="parsfr03_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="parsfr03_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr03_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr03_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="parsfr03_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="mdrdsp04_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="mdrdsp04_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="mdrdsp04_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mdrdsp04_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mdrdsp04_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mdrdsp04_collective.*.command" read="mcollective" admin="mcollective" />

                  <authorizationEntry queue="snjsca04_collective.>" write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="snjsca04_collective.nodes" read="mcollective" admin="mcollective" />
                  <authorizationEntry queue="snjsca04_collective.reply.>" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="snjsca04_collective.*.reply" write="mcollective" admin="mcollective" />
                  <authorizationEntry topic="snjsca04_collective.*.agent" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="snjsca04_collective.*.command" read="mcollective" admin="mcollective" />



                  <authorizationEntry queue="ActiveMQ.Statistics.>" read="admins" write="admins" admin="admins"/>                  
                  <authorizationEntry queue="amqstats.>" read="admins" write="admins" admin="admins"/>

                  <authorizationEntry queue="mcoaudit" write="mcollective" read="admins" admin="admins" />
                  <authorizationEntry queue="registration" write="mcollective" read="mcollective" admin="mcollective" />
                  <authorizationEntry topic="mcollective.registration.>" write="mcollective" read="mcollective" admin="mcollective" />

                  <authorizationEntry topic="ActiveMQ.Advisory.>" read="everyone" write="everyone" admin="everyone"/>

                  
         
                </authorizationEntries>
              </authorizationMap>
            </map>
          </authorizationPlugin>
        </plugins>

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit="20 mb"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="1 gb" name="foo"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="1 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <transportConnectors>
            <transportConnector name="openwire" uri="tcp://0.0.0.0:6166"/>
            <transportConnector name="stomp+nio" uri="stomp://0.0.0.0:6163"/>
        </transportConnectors>
    </broker>


<!--      <import resource="jetty.xml"/> -->

</beans>